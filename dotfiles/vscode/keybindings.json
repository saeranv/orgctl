// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+l",
        "command": "cursorRight"
    },
    {
        "key": "ctrl+k",
        "command": "cursorDown"
    },
    {
        "key": "LeftArrow",
        "command": "cursorLeft"
    },
    {
        "key": "RightArrow",
        "command": "cursorRight"
    },
    {
        "key": "UpArrow",
        "command": "cursorUp"
    },
    {
        "key": "DownArrow",
        "command": "cursorDown"
    },
    {
        "key": "ctrl+alt+f",
        "command": "editor.action.goToReferences",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+alt+d",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+j",
        "command": "cursorLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "cursorRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+k",
        "command": "cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+i",
        "command": "cursorUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+r",
        "command": "editor.action.startFindReplaceAction"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.quickOpenNavigateNextInRecentFilesPicker",
        "when": "inQuickOpen && inRecentFilesPicker"
    },
    {
        "key": "ctrl+q ctrl+q",
        "command": "workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+`",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+q",
        "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
        "when": "inQuickOpen && inViewsPicker"
    },
    {
        "key": "ctrl+shift+q",
        "command": "editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+[",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "ctrl+shift+w",
        "command": "editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+]",
        "command": "-editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+e ctrl+c",
        "command": "planner.saveToGoogleCalendar",
        "when": "editorTextFocus && editorLangId == 'org'"
    },
    {
        "key": "ctrl+e ctrl+c",
        "command": "-planner.saveToGoogleCalendar",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+s ctrl+c",
        "command": "planner.showInGoogleCalendar",
        "when": "editorTextFocus && editorLangId == 'org'"
    },
    {
        "key": "ctrl+s ctrl+c",
        "command": "-planner.showInGoogleCalendar",
        "when": "editorTextFocus && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+alt+q ctrl+alt+q",
        "command": "bracketeer.removeBrackets"
    },
    {
        "key": "ctrl+shift+alt+i",
        "command": "-bracketeer.removeBrackets"
    },
    {
        "key": "ctrl+j",
        "command": "cursorMove",
        //"command": "scrollPageDown",
        "args": {
            "to": "down",
            "by": "wrappedLine",
            "value":10
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k",
        //"command": "scrollPageUp",
        "command":"cursorMove",
        "args": {
            "to": "up",
            "by": "wrappedLine",
            "value":10
        },
        "when": "editorTextFocus"
    },

]